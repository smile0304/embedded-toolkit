# Source this file, it should be helpful when cross-compiling

# --- Architecture specific settings, change this for a different architecture/toolchain
# The --host=variable
export TARGET_HOST=powerpc-linux-muslsf
# The root of the system with libraries and headers in the target architecture
#export TARGET_ROOT="/opt/brcm/hndtools-mipsel-uclibc-4.2.4/"
export TARGET_ROOT="/toolchains/powerpc-linux-muslsf/"
# Same as root
export STAGING_DIR=$TARGET_ROOT
# Where the toolchain is, the native version of compiler, linker, assembler, etc.
#export BIN=/opt/brcm/hndtools-mipsel-linux-uclibc-4.2.3/bin/
export BIN=/toolchains/powerpc-linux-muslsf/bin
export PATH=$BIN:/bin:/usr/bin:/sbin:/usr/bin
# For braindead build scripts that don't use --host, spell it out for them
for tool in ld as gcc objdump readelf nm strip
do
    echo ln -sf $BIN/$TARGET_HOST-$tool $BIN/$tool
    rm -f $BIN/$tool
    ln -sf $BIN/$TARGET_HOST-$tool $BIN/$tool
done
# --- You shouldn't have to change below this line ---

# --- Application specific settings ---
# LSOF doesn't use --host= nor does it use CC=, LD=, AS=, etc.. 
export LSOF_STRIP=$BIN/strip
export LSOF_LD=$BIN/ld
export LSOF_CC=$BIN/gcc
export LSOF_AS=$BIN/as
#export LSOF_INCLUDE=/opt/brcm/hndtools-mipsel-uclibc-4.2.4/include/
export LSOF_INCLUDE=/toolchains/powerpc-linux-muslsf/powerpc-linux-muslsf/include/
export LSOF_CFGF='-fPIC -static'
export LSOF_CFGL='-static -fPIC lib/liblsof.a'
# --- End application specific settings ---

